##################################################
# some vars #
##################################################
set $term    --no-startup-id st
set $browser --no-startup-id surf
set $fm      --no-startup-id st -c ranger  -e ranger
set $mua     --no-startup-id st -c neomutt -e neomutt
##################################################
# colors #
##################################################
set $green  #90A959
set $lblue  #6A9FB5
set $urgent #990000
set $orange_0 #fe8019
set $orange_1 #d65d0e
set $orange_2 #af3a03

# colors form .Xresources
set_from_resource $fg    foreground
set_from_resource $bg    background
set_from_resource $fbg   color8
set_from_resource $col0  color0  #000000
set_from_resource $col1  color1  #000000
set_from_resource $col2  color2  #000000
set_from_resource $col3  color3  #000000
set_from_resource $col4  color4  #000000
set_from_resource $col5  color5  #000000
set_from_resource $col6  color6  #000000
set_from_resource $col7  color7  #000000
set_from_resource $col8  color8  #000000
set_from_resource $col9  color9  #000000
set_from_resource $col10 color10 #000000
set_from_resource $col11 color11 #000000
set_from_resource $col12 color12 #000000
set_from_resource $col13 color13 #000000
set_from_resource $col14 color14 #000000
set_from_resource $col15 color15 #000000


# client.focused          $fbg $fbg $fbg $fbg
# client.focused_inactive $bg $bg $bg $bg
# client.unfocused        $bg $bg $bg $bg
# client.urgent           $bg $bg $bg $bg

#################################################
# fonts #
##################################################
font pango: Ubuntu Mono, Font Awesome 5 Free 16
##################################################
# Window Decorations Colors #
# -----
# client.focused: A client which currently has the focus.
# client.focused_inactive: A client which is the focused one of its container, but it does not have the focus at the moment.
# client.unfocused: A client which is not the focused one of its container.
# client.urgent: A client which has its urgency hint activated.
# client.placeholder: Background and text color are used to draw placeholder window contents (when restoring layouts). Border and indicator are ignored.
# client.background: Background color which will be used to paint the background of the client window on top of which the client will be rendered. Only clients which do not cover the whole area of this window expose the color. Note that this colorclass only takes a single color.
##################################################
#class                  border  backgr. text    indicator child_border
client.focused          #fe8019 #90A959 #ffffff #d65d0e   #2e9ef4
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #990000 #ffffff #990000   #990000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
client.background       #ffffff

# top bar
bar {
  id bar-top
    position top
    status_command SCRIPT_DIR=/usr/libexec/i3blocks i3blocks -c ~/.config/i3/i3blocks-top.conf
    tray_output primary
    separator_symbol ":"
    workspace_buttons  yes
# mode dock ?
# modifier None ?
    colors {
      background #000000
        separator #666666
        statusline #EEEEEE
#                 <border> <backgd> <text>
        focused_workspace #111111  #111111 #d65d0e
        active_workspace   #333333 #5f676a #ffffff
        inactive_workspace #333333 #222222 #888888
        urgent_workspace   #2f343a #900000 #ffffff
        binding_mode       #2f343a #900000 #ffffff
    }
}
# bottom bar
bar {
    id bar-bottom
    position bottom
    status_command i3blocks -c ~/.config/i3/i3blocks-bottom.conf
    workspace_buttons no
}
##################################################
# I3 Gaps
##################################################
gaps inner 10
gaps outer 10
smart_borders on
smart_gaps on
##################################################
# workspaces #
##################################################
set $ws1 "1:www"
set $ws2 "2:emacs"
set $ws3 "3:code"
set $ws4 "4:files"
set $ws5 "5:comms"
set $ws6 "6:scratch"
set $ws7 "7:mail"
set $ws8 "8:docs"
set $ws9 "9:logs"
set $ws0 "0:Studio"
set $ws_zoom "Zoom"
set $ws_gimp "Gimp"

#          
# define monitors
set $monitorCenter DVI-I-1
set $monitorLeft   HDMI-0
set $monitorRight  DVI-D-0
# bind workspace to monitor
#workspace $ws1 output $monitorCenter
#workspace $ws5 output $monitorLeft
#workspace $ws8 output $monitorRight

##################################################
# window rules
##################################################
for_window [class="^.*"] border pixel 5
for_window [class=".*"]  border pixel 5 title_format "  %title"
# #---Dropdown Windows---# #
# General dropdown window traits. The order can matter.
for_window [instance="dropdown_*"] floating enable
for_window [instance="dropdown_*"] move scratchpad
for_window [instance="dropdown_*"] sticky enable
for_window [instance="dropdown_*"] scratchpad show
for_window [instance="dropdown_tmuxdd"] resize set 625 450
for_window [instance="dropdown_dropdowncalc"] resize set 800 300
for_window [instance="dropdown_tmuxdd"] border pixel 5
for_window [instance="dropdown_dropdowncalc"] border pixel 5
for_window [instance="dropdown_*"] move position center

# show title : bindsym Mod4+z border normal 0

# this fix bottom bar overlapping emacs window:
#for_window [class="Emacs"] border none
# floating windows
for_window [class="copyq"]             floating enable
for_window [window_role="pop-up"]      floating enable
for_window [window_role="task_dialog"] floating enable
for_window [title="Preferences$"]      floating enable
for_window [class="(?i)mplayer"]       floating enable
for_window [class="Pavucontrol"]       floating enable
for_window [class="angrysearch"]       floating enable, resize set 1000 800, move position center
for_window [class="Yad"]               floating enable

# file chooser
for_window [window_role="GtkFileChooserDialog"] resize set 1000 800, move position center
# gimp
for_window [title="GIMP Startup"] move workspace $ws_gimp
for_window [class="Gimp"]         move workspace $ws_gimp

# on some events
# for_window [urgent="latest"] focus
# for_window [urgent="latest" class="XTerm"] focus
#
# enable floating mode and move container to workspace 4:
# for_window [class="^evil-app$"] floating enable, move container to workspace 4
#

#
# Bindings to make the webcam float and stick.
for_window [title="mpvfloat"] floating enable
for_window [title="mpvfloat"] sticky enable
for_window [title="mpvfloat"] border pixel 0
no_focus   [title="mpvfloat"]

# Assign applications to specific workspaces
assign [class="google-chrome*"] $ws1
assign [class="Firefox"] $ws1
assign [class="Iceweasel"] $ws1
assign [class="Emacs"] $ws2
assign [class="jetbrains-idea-ce"] $ws3
assign [class="nemo"] $ws4
assign [class="Slack|Telegram|TelegramDesktop|Skype"] $ws5
assign [class="transmission-gtk"] $ws6
assign [class="Evolution"] $ws7
assign [class="neomutt"]   $ws7
assign [class="libreoffice|LibreOffice|soffice"] $ws8
assign [title="journalctl|sudo|xerrors|i3-dump-log|tail|xerrors"] $ws9
assign [title="Zoom.-.Pro.Account"] $ws_zoom
##################################################
# misc settings
##################################################
focus_follows_mouse yes
# use Mouse+Mod1 to drag floating windows to their wanted position
floating_modifier Mod1
# set popups during fullscreen mode
popup_during_fullscreen smart
##################################################
# Key bindings
##################################################
# Home, End, Ctrl+End, Ctrl+Left, Ctrl+Backspace
# Prior, Next, Home, End
# semicolon, apostrophe, slash, backslash
# KP_1 .. KP_0
#
# bindsym --release $mod+Tab+h exec --no-startup-id xdotool key "Left",
# so that i3 executes that keybinding when the key is released.
# --release only seems to pay attention to when any key in the bind is released. If you release one of the keys before $mod i3 handles it as a the $mod+left bind.
# The --no-startup-id parameter disables startup-notification support for this particular exec command.
# With startup-notification, i3 can make sure that a window appears on the workspace on which you used the exec command.
# Commands can be chained by using ; 
# If the command to be executed contains a ; (semicolon) and/or a , (comma), the entire command must be quoted
# Being a command-line utility, i3-msg does not support startup notifications, hence the exec --no-startup-id.
# exec --no-startup-id i3-msg 'workspace 3; exec iceweasel; workspace 1'
# i3 interprets commas and colons specially so if you are using those characters you need to quote your exec command.
##################################################
# modifiers
##################################################
set $mod Mod4
set $alt Mod1
##################################################
# Switch to next/prev workspace
bindsym $mod+$alt+Right workspace next
bindsym $mod+$alt+Left  workspace prev
# jump to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0
# Move focused container to workspace (no-follow)
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0
# Move focused container to workspace (follow-container)
bindsym $mod+Ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace $ws0; workspace $ws0
# focus window
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right
# move window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# reload/restart configuration
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
# kill window
bindsym $mod+Shift+q kill
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -f Ubuntu Mono:bold:pixelsize=28 -m 'Do you really want to exit i3?' -b 'Yes, exit i3' 'i3-msg exit'"
# split in horizontal orientation
bindsym $mod+h split h
# split in vertical orientation
bindsym $mod+v split v
#
bindsym $mod+apostrophe		split horizontal ;; exec $term
bindsym $mod+slash		split vertical ;; exec $term
#
# toggle sticky
# bindsym $mod+o			sticky toggle
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
# TODO find new one
#bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
# focus the child container
bindsym $mod+d focus child

# i3's solution to minimising windows
# i3 has an invisible workspace called the Scratchpad workspace. Users can move windows to and from it to hide them from the main workspaces. 
# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show, floating toggle


for_window [title="passwords.kdbx"] floating enable, move position center, border normal 2, move scratchpad
# scratchpad terminal
exec --no-startup-id "urxvt --class='ScratchPad'"
for_window [class="ScratchPad"] floating enable, resize set 1366 384, move position 0 18, move scratchpad
bindsym F12 [class="ScratchPad"] scratchpad show

#
# my specific bindings
#
# workspace back_and_forth
bindsym $mod+Tab  workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth
#
# jump to urgent window
bindsym $mod+u [urgent=latest] focus
#
#
# start a terminal
bindsym $mod+Return       exec --no-startup-id st
bindsym $mod+Shift+Return exec --no-startup-id i3-samedir
# screenshot
bindsym Print exec i3-screenshot
# file manager
bindsym $mod+Home exec nemo
bindsym $mod+Shift+Home  exec $term -n ranger -e ranger
# process management
bindsym $mod+Shift+Delete exec $term -n htop -e htop
bindsym $mod+Delete       exec $term -n htop -e htop
# sound management
set $volumemute pamixer -t
set $volumeup   pamixer -i 5 -u
set $volumedown pamixer -d 5 -u
bindsym Scroll_Lock          exec --no-startup-id $volumedown
bindsym Pause                exec --no-startup-id $volumeup
bindsym $mod+Scroll_Lock     exec --no-startup-id $volumemute
bindsym XF86AudioMute        exec --no-startup-id $volumemute
bindsym XF86AudioLowerVolume exec --no-startup-id $volumedown
bindsym XF86AudioRaiseVolume exec --no-startup-id $volumeup
#
# set you own variable names or override values of variables. It works by replacing text, like the c pre-processor, and has no concept other than strings.
set $dmenu_font 'Ubuntu Mono:bold:pixelsize=20'
set $dmenu_nbg  '#fdf6e3'
set $dmenu_nfg  '#586c75'
set $dmenu_sfg  '#fdf6e3'
set $dmenu_sbg  '#b58900'
set $dmenu_ui   -fn $dmenu_font -nb $dmenu_nbg -nf $dmenu_nfg -sf dmenu_sfg -sb $dmenu_sbg

bindsym $mod+x           exec rofi -show run    -p "undx run" -location 2
bindsym $mod+space       exec rofi -show window -p "undx switch window"
bindsym $mod+Shift+space exec rofi -show combi
bindsym $mod+j           exec rofi-jira
bindsym $mod+p           exec gopass ls --flat | rofi -dmenu -p "undx gopass" | xargs --no-run-if-empty gopass show -f | head -n 1 | xdotool type --clearmodifiers --file -

#   ps1="$(grep "\S" "$tmpfile" | tail -n 1 | sed 's/^\s*//' |  cut -d' ' -f1)"


#bindsym $mod+b			bar mode toggle
bindsym $mod+Shift+b		floating toggle; sticky toggle; exec --no-startup-id hover left
bindsym $mod+Shift+n		floating toggle; sticky toggle; exec --no-startup-id hover right
bindsym $mod+Shift+l		move right 30
bindsym $mod+Shift+k		move up 30
bindsym $mod+Shift+j		move down 30
bindsym $mod+Shift+h		move left 30
#bindsym $mod+o			sticky toggle
bindsym $mod+F10			exec $term -name calcy -e bc -lq # ddspawn tmuxdd
bindsym $mod+F11			exec --no-startup-id ddspawn dropdowncalc -f mono:pixelsize=24

#bindsym $mod+q			[con_id="__focused__" instance="^(?!dropdown_).*$"] kill
#bindsym $mod+Shift+q		[con_id="__focused__" instance="^(?!dropdown_).*$"] exec --no-startup-id kill -9 `xdotool getwindowfocus getwindowpid`

##################################################
# binding modes
##################################################
# Press $mod+o followed by either f, e, i, Escape or Return to launch firefox,
# etc. or return to the default mode, respectively.
set $mode_launcher Launch: [c]hrome [e]macs [f]irefox [m]Evolution [i]ntellij [s]lack [v]im
mode "$mode_launcher" {
    bindsym c exec google-chrome-stable --restore-last-session
    bindsym e exec emacs
    bindsym f exec firefox
    bindsym i exec intellij
    bindsym m exec evolution
    bindsym s exec slack
    bindsym v exec gvim
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
bindsym $mod+o mode "$mode_launcher"
#
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym Left        resize shrink width  10 px or 10 ppt
        bindsym Down        resize grow   height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow   width  10 px or 10 ppt
        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
set $Locker i3lock && sleep 1
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Pause mode "$mode_system"


set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
    bindsym equal gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+equal gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
    bindsym equal gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+equal gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
##################################################
# auto start #
##################################################
# exec_always : executed when reloading or restarting
# system
exec_always --no-startup-id setxkbmap -layout ux -option ctrl:nocaps -option compose:rctl
exec_always --no-startup-id pgrep xcape || xcape -e 'Shift_L=Shift_L|parenleft;Shift_R=Shift_R|parenright;Control_L=Escape'
exec_always --no-startup-id pgrep gnome-keyring-daemon || gnome-keyring-daemon
exec_always --no-startup-id pgrep nm-applet || nm-applet
exec_always --no-startup-id pgrep blueman-applet || blueman-applet
exec_always --no-startup-id pgrep xscreensaver || xscreensaver -no-splash
#exec_always --no-startup-id pgrep dunst || dunst
exec_always --no-startup-id pgrep compton  || compton -f
exec_always --no-startup-id pgrep autokey-gtk || autokey-gtk
exec_always --no-startup-id pgrep copyq || copyq
exec_always --no-startup-id pgrep dropbox || dropbox start
exec_always --no-startup-id pgrep numlockx || numlockx on
exec_always --no-startup-id dunst -lb "$bg" -nb "$bg" -cb "$bg" -lf "$fg" -bf "fg" -cf "$fg" -nf "$fg" -fn "ypn envypn 12" -s -geometry "400x60-10+40" -format "<b>%s</b>\n%b" -shrink  -lto 3 -nto 5 -cto 0 -align "left" -transparency 0 -padding 8 -horizontal_padding 8
#                                delay rate
#exec --no-startup-id xset r rate 300   80
# lock
# i3-lock : /usr/bin/i3lock -ni <(import -silent -window root png:- | mogrify -blur 0x40 png:-)
exec --no-startup-id xautolock -locker "i3lock -ni <(import -silent -window root png:- | mogrify -blur 0x40 png:-)" -time 10 -detectsleep -notify 10
#
# ui
exec --no-startup-id xsetroot -solid black
exec --no-startup-id feh --bg-fil  ~/Dropbox/media/images/Wallpapers/hokusai-wave.jpg
# my apps
exec --no-startup-id google-chrome-stable --restore-last-session
exec --no-startup-id evolution
exec --no-startup-id slack
exec --no-startup-id ~/bin/Telegram/Telegram
# admin session and monitoring
exec --no-startup-id $term -n sudo       -e sudo su -
exec --no-startup-id $term -n journalctl -e journalctl -f
exec --no-startup-id $term -n xerrors    -e tail -f ~/.xsession-errors
# scratchpads
exec --no-startup-id $term -n shelly
exec --no-startup-id $term -n calcy -e bc -ilq
